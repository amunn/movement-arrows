% movement-arrows
% Draw movement arrows on example sentences including glossed sentences
% Copyright 2023 by Alan Munn <amunn@msu.edu>
% 
%
% This package may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This package has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this package is Alan Munn.
%%
% Version 1.0 2023-05-21 Initial release
% Version 1.0b 2023-05-22 Fixed documentation typo
% Version 2.0 2023-06-01 added \arrowgloss to fix strut problem
%						 made package more general, added \mvlink command, new styles
%					     renamed arrow command to be \mvarrow
%
%
%
\def\MVA@version{2.0}
\ProvidesPackage{movement-arrows}[2023/06/02 v \MVA@version]
\@ifpackageloaded{gb4e}{\noautomath}{}
\RequirePackage{tikz}
\usetikzlibrary{ext.paths.ortho}
\RequirePackage{etoolbox}
\RequirePackage{calc}
\newif\ifMVA@mmode
\NewDocumentCommand{\mkword}{om}{%
\ifmmode\MVA@mmodetrue\else\MVA@mmodefalse\fi
\IfNoValueTF{#1}
{\tikz[remember picture, baseline=(#2.base)] \node[anchor=base,inner sep=0pt, outer sep=0pt] (#2) {\ifMVA@mmode\ensuremath{#2}\else#2\fi};}
{\tikz[remember picture, baseline=(#1.base)] \node[anchor=base,inner sep=0pt, outer sep=0pt] (#1) {\ifMVA@mmode\ensuremath{#2}\else#2\fi};}
}
\tikzset{
<<<<<<< HEAD
    arrow/.style={arrow dir=ncbar,->,shorten >=3pt,shorten <=3pt},
    ncbar angle/.initial=90,
    arrow dir/.initial=ncbar,
    arrow dir/.store in=\MVA@arrowdir,
    ncbar/.style={% |_____| shape
        to path=(\tikztostart)
        -- ($(\tikztostart)!#1!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztotarget)$)
        -- ($(\tikztotarget)!($(\tikztostart)!#1!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztotarget)$)!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztostart)$)
        -- (\tikztotarget)
    },
    rbar/.style={% _____| shape
        to path=(\tikztostart)
        -- ($(\tikztostart)!#1!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztotarget)$)
        -- ($(\tikztotarget)!($(\tikztostart)!#1!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztotarget)$)!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztostart)$)
    },
    lbar/.style={% |_____ shape
        to path=
          ($(\tikztostart)!#1!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztotarget)$) 
        -- ($(\tikztotarget)!($(\tikztostart)!#1!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztotarget)$)!\pgfkeysvalueof{/tikz/ncbar angle}:(\tikztostart)$)
        -- (\tikztotarget)
    },
    ncbar/.default=0.5cm,
=======
	circ/.style = {
  		draw,circle,solid,
  		node contents=#1,
  		fill=white,
  		inner xsep=.2em,
  		inner ysep=0pt
},
    link/.style={#1,shorten >=3pt,shorten <=3pt},
    above/.style = {label=above:#1},
    below/.style = {label=below:#1}
>>>>>>> master
}
\newlength{\arrowheight}
\newlength{\MVA@arrowstrutheight}
\setlength{\MVA@arrowstrutheight}{3ex}
\setlength{\arrowheight}{2.5ex}
\newlength{\extraexheight}
\setlength{\extraexheight}{1.5ex}
\newlength{\glarrowheight}
\setlength{\glarrowheight}{\arrowheight+\extraexheight}
\newlength{\MVA@arrowht}
\newlength{\MVA@extraht}
\setlength{\MVA@arrowht}{0ex}
\setlength{\MVA@extraht}{0ex}
\newcommand*\MVA@arrowstyle{->}
\newcommand*\setarrowstyle[1]{\gdef\MVA@arrowstyle{#1}}
\newif\ifMVA@arrowgloss
\newlength{\MVA@strutheight}
\newcommand*\MVA@arrowstrut{%
	\setlength{\MVA@strutheight}{\MVA@arrowht+\MVA@extraht}%
	{\vrule height 0pt depth \MVA@strutheight width 0pt}}

<<<<<<< HEAD
% To use arrows with plain (unglossed) examples, we need a different way
% to introduce the \arrowex since it might have a grammaticality judgement
% this will require some thinking for linguex and gb4e and expex separately

% Thanks to Paul Gessler and Percusse for code improvement here
=======
\newcommand*\arrowgloss{\setlength{\MVA@arrowht}{\arrowheight}\setlength{\MVA@extraht}{\extraexheight}\global\MVA@arrowglosstrue}
\newcommand*\arrowstrut{\vspace*{\MVA@arrowstrutheight}}
>>>>>>> master

\NewDocumentCommand{\mvarrow}{somm}{%
\ifMVA@arrowgloss\else\arrowstrut\fi
\IfBooleanTF{#1}%
{\setlength{\MVA@arrowht}{-\arrowheight}
 \setlength{\MVA@extraht}{-\extraexheight}
\def\MVA@rightanchor{north}\let\MVA@leftanchor\MVA@rightanchor}
{\setlength{\MVA@arrowht}{\arrowheight}
\setlength{\MVA@extraht}{\extraexheight}
\def\MVA@rightanchor{base}\let\MVA@leftanchor\MVA@rightanchor}
\IfNoValueTF{#2}
{%
\begin{tikzpicture}[remember picture,overlay]
\draw[link=\MVA@arrowstyle] (#3.\MVA@rightanchor) r-du[du distance=\MVA@arrowht] (#4.\MVA@leftanchor);
\end{tikzpicture}
}
{\begin{tikzpicture}[remember picture,overlay]
\draw[link=\MVA@arrowstyle] (#3.\MVA@rightanchor)  r-du[du distance=\MVA@arrowht] node[#2] {}  (#4.\MVA@leftanchor);
\end{tikzpicture}}
\global\MVA@arrowglossfalse%
\setlength{\MVA@arrowht}{0ex}
\setlength{\MVA@extraht}{0ex}
}
\NewDocumentCommand{\mvlink}{somm}{%
\ifMVA@arrowgloss\else\arrowstrut\fi
\IfBooleanTF{#1}%
{\setlength{\MVA@arrowht}{-\arrowheight}
 \setlength{\MVA@extraht}{-\extraexheight}
\def\MVA@rightanchor{north}\let\MVA@leftanchor\MVA@rightanchor}
{\setlength{\MVA@arrowht}{\arrowheight}
\setlength{\MVA@extraht}{\extraexheight}
\def\MVA@rightanchor{base}\let\MVA@leftanchor\MVA@rightanchor}
\IfNoValueTF{#2}
{%
\begin{tikzpicture}[remember picture,overlay]
\draw[link] (#3.\MVA@rightanchor) r-du[du distance=\MVA@arrowht] (#4.\MVA@leftanchor);
\end{tikzpicture}
}
{\begin{tikzpicture}[remember picture,overlay]
\draw[link] (#3.\MVA@rightanchor)  r-du[du distance=\MVA@arrowht] node[#2] {}  (#4.\MVA@leftanchor);
\end{tikzpicture}}
\global\MVA@arrowglossfalse%
\setlength{\MVA@arrowht}{0ex}
\setlength{\MVA@extraht}{0ex}
}
\AtBeginDocument{%
\ifdefined\eachwordone\preto{\eachwordone}{\MVA@arrowstrut}
\fi}

<<<<<<< HEAD
% This code is useful for underlining stuff too add this
%\newcommand*{\tkzuline}[3][]{\tikz[overlay,remember picture]{ \draw[#1] (#2.south) -- (#3.south);}}
%\newcommand*{\UL}{\tkzmk{1}}
%\newcommand*{\LU}{\tkzmk{2}}
%\newcommand*{\gluline}[1][]{\tkzuline[#1]{1}{2}}




\endinput
\usepackage{gb4e}



% The following code modified from 
% http://permalink.gmane.org/gmane.comp.tex.linguistics/1036
% This adds some extra space after the first line


\renewcommand\eachwordone{\cgdepthstrut\rmfamily}
\renewcommand\glt{\vskip -\topsep}
\let\trans=\glt
\newcommand\arrowex{\setlength{\arrowht}{2.5ex}\ex}


\begin{document}
\begin{exe}
\ex\label{scramble-det}
\begin{xlist}
        \arrowex 
        \gll 
        \ldots dat Jan \tikzmark{een} auto gisteren \tikzmark{t}  gekregen heeft.\\
        \ldots that John a car  yesterday t gotten has \\
        \ldots that John a car yesterday.
        \arrow{t}{een}
\end{xlist}
\end{exe}

\begin{exe}
\arrowex{
    \gll
    \tikzmark{John}-wa totetumonaiukurai dousiyoumonai \tikzmark{tondemonai} \tikzmark{sukuigatai}  \tikzmark{t} baka-da.    \\
     John-Top very very very very {} stupid-cop \\
     \arrow[l]{tondemonai}{John}
     \arrow[r]{t}{sukuigatai}
    \glt `John is very stupid.'   
}


\end{exe}

% This code a switch to apply to successive glossed elements
% Answer to https://tex.stackexchange.com/q/433375/2693
%
% Should probably incorporate all this into a package of 'useful gloss stuff'
%

\usepackage{xcolor}
\usepackage{gb4e}

\makeatletter
\newcommand*\glosscolor[1]{\gdef\@glcolor{#1}}
\glosscolor{red}
\AtBeginDocument{\colorlet{savedcol}{.}}
\def\@glosscolor{savedcol}
\newcommand{\clt}{\gdef\@glosscolor{\@glcolor}\color{\@glosscolor}}
\newcommand{\clf}{\gdef\@glosscolor{savedcol}\color{\@glosscolor}}

\gdef\getwords(#1,#2)#3 #4\\% #1=linebox, #2=\each, #3=1st word, #4=remainder
   {\setbox#1=\vbox{\hbox{#2{\strut\color{\@glosscolor}#3} }% adds space
                    \unvbox#1%
                   }%
    \def\more{#4}%
    \ifx\more\empty\let\more=\donewords
    \else\let\more=\getwords
    \fi
    \more(#1,#2)#4\\%
   }
\gdef\donewords(#1,#2)\\{\gdef\@glosscolor{.}}   
\makeatother
\begin{document}
\begin{exe}
\ex \glll
    \clt a  b c d \clf e \clt f g\\
    a  \clt b  c  d f \clf g\\
    a \clt b c d \clf e f g\\
\end{exe}

\end{document}
=======
>>>>>>> master
